# Generated by Django 4.1.3 on 2022-11-21 16:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto
import functools


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_answer', models.DateField(auto_now_add=True, verbose_name='Response date')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerQuestionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Answer (if textual)')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Choice name')),
                ('order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Choice order')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Question name')),
                ('order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Question order')),
                ('type', models.CharField(choices=[('STR', 'string'), ('SIN', 'single choice'), ('MUL', 'multiple choice')], max_length=3, verbose_name='Question type')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Survey name')),
                ('description', models.TextField(verbose_name='Description')),
                ('date_start', models.DateField(verbose_name='Start date')),
                ('date_end', models.DateField(null=True, verbose_name='End date')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Hidden')),
            ],
            options={
                'get_latest_by': 'date_start',
            },
        ),
        migrations.CreateModel(
            name='UserTokenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=functools.partial(django.utils.crypto.get_random_string, *(36,), **{}), editable=False, max_length=36, unique=True, verbose_name='User token')),
                ('date_issuance', models.DateField(auto_now_add=True, verbose_name='Issuance date')),
            ],
        ),
        migrations.AddIndex(
            model_name='usertokenmodel',
            index=models.Index(models.F('token'), name='token_idx'),
        ),
        migrations.AddIndex(
            model_name='usertokenmodel',
            index=models.Index(models.F('date_issuance'), name='date_issuance_idx'),
        ),
        migrations.AddIndex(
            model_name='surveymodel',
            index=models.Index(models.F('date_start'), name='date_start_idx'),
        ),
        migrations.AddIndex(
            model_name='surveymodel',
            index=models.Index(models.F('date_end'), name='date_end_idx'),
        ),
        migrations.AddIndex(
            model_name='surveymodel',
            index=models.Index(models.F('is_hidden'), name='is_hidden_idx'),
        ),
        migrations.AddConstraint(
            model_name='surveymodel',
            constraint=models.CheckConstraint(check=models.Q(('date_end', None), ('date_end__gt', models.F('date_start')), _connector='OR'), name='end_after_start'),
        ),
        migrations.AddField(
            model_name='questionmodel',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='survey.surveymodel', verbose_name='Survey'),
        ),
        migrations.AddField(
            model_name='questionchoicemodel',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='survey.questionmodel', verbose_name='Question to which is attached'),
        ),
        migrations.AddField(
            model_name='answerquestionmodel',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='survey.answermodel', verbose_name='Survey'),
        ),
        migrations.AddField(
            model_name='answerquestionmodel',
            name='choice',
            field=models.ManyToManyField(blank=True, related_name='+', to='survey.questionchoicemodel', verbose_name='Answer (if choice)'),
        ),
        migrations.AddField(
            model_name='answerquestionmodel',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='survey.questionmodel', verbose_name='Question'),
        ),
        migrations.AddField(
            model_name='answermodel',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='survey.surveymodel', verbose_name='Survey to which is answered'),
        ),
        migrations.AddField(
            model_name='answermodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.usertokenmodel', verbose_name='User'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='questionmodel',
            order_with_respect_to='survey',
        ),
        migrations.AddIndex(
            model_name='questionmodel',
            index=models.Index(fields=['survey', 'order'], name='survey_ques_survey__d1ad77_idx'),
        ),
        migrations.AddConstraint(
            model_name='questionmodel',
            constraint=models.UniqueConstraint(models.F('survey'), models.F('order'), name='question_order_in_survey'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='questionchoicemodel',
            order_with_respect_to='question',
        ),
        migrations.AddIndex(
            model_name='questionchoicemodel',
            index=models.Index(fields=['question', 'order'], name='survey_ques_questio_d8d92c_idx'),
        ),
        migrations.AddConstraint(
            model_name='questionchoicemodel',
            constraint=models.UniqueConstraint(models.F('question'), models.F('order'), name='choice_order_in_question'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='answerquestionmodel',
            order_with_respect_to='answer',
        ),
        migrations.AddConstraint(
            model_name='answerquestionmodel',
            constraint=models.UniqueConstraint(models.F('answer'), models.F('question'), name='answer_for_question'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='answermodel',
            order_with_respect_to='survey',
        ),
        migrations.AddIndex(
            model_name='answermodel',
            index=models.Index(models.F('date_answer'), name='date_answer_idx'),
        ),
    ]
